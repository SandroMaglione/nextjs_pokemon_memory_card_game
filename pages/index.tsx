import * as E from 'fp-ts/Either';
import { convertPokemonListToCards, getPokemonList } from '@lib/pokeapi';
import { pipe } from 'fp-ts/lib/function';
import { GetServerSidePropsResult } from 'next';
import Head from 'next/head';
import { ReactElement, useState } from 'react';
import { MemoryCardState, Pokemon } from 'app-types';
import MemoryCard from '@components/MemoryCard';
import {
  gameStateFromMemoryCardList,
  handleClickOnCard,
} from 'controllers/game-manager';
import { map } from 'fp-ts/lib/Array';

interface PageProps {
  memoryCardList: MemoryCardState[];
}

export default function Home({ memoryCardList }: PageProps): ReactElement {
  const [cardList, setCardList] = useState<MemoryCardState[]>(memoryCardList);
  const gameState = gameStateFromMemoryCardList(cardList);
  const handleClick = (cardState: MemoryCardState): void =>
    setCardList(handleClickOnCard({ cardState, gameState }));

  return (
    <div>
      <Head>
        <title>Card Game Poke API</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="my-12 mx-14">
        <h1 className="text-3xl font-bold text-gray-800">
          Welcome to the amazing Card Game Poke API
        </h1>
        <div className="grid grid-cols-4 gap-4 mt-6">
          {pipe(
            cardList,
            map((cardState) => (
              <MemoryCard
                key={cardState.value.id}
                cardState={cardState}
                handleClick={() => handleClick(cardState)}
              />
            ))
          )}
        </div>
      </div>
    </div>
  );
}

// TODO: Display error message when getPokemonList fails
export async function getServerSideProps(): Promise<
  GetServerSidePropsResult<PageProps>
> {
  return pipe(
    await getPokemonList()(),
    E.getOrElse((): Pokemon[] => []),
    (pokemonList) => ({
      props: { memoryCardList: convertPokemonListToCards(pokemonList) },
    })
  );
}
